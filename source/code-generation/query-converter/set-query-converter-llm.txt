.. _rm-query-converter-set-llm:

============================================
Set the Query Converter Large Language Model
============================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

:ref:`Query Converter <rm-query-converter>` generates application code to
streamline migrating an application from its original database
into MongoDB. Query Converter is powered by generative AI. By default, it uses
the GPT-4o model, hosted on MongoDB's `Azure OpenAI
<https://azure.microsoft.com/en-us/products/ai-services/openai-service>`__
subscription. You can configure Relational Migrator to use a different Large
Language Model (LLM) by following these steps.


Before You Begin
----------------

- Review the list of :ref:`supported LLMs <rm-supported-llms>`.
- Create an API key or access credentials for Relational Migrator.
  Required credentials depend on your AI service provider.

Steps
-----

.. procedure::
   :style: normal

   .. step:: Stop Relational Migrator.

   .. step:: Open the configuration file.

      This file is located at:

      .. include:: /includes/fact-user-properties-location.rst

   .. step:: Configure Relational Migrator for your LLM of choice.

      Set the following ``migrator.queryconversion.llm.options``.
      Unset any previously-set ``migrator.queryconversion.llm.options`` that 
      aren't used for your LLM.

      .. tabs::

         .. tab:: Azure OpenAI
            :tabid: llm-settings-azure-openai

            .. code-block:: javascript
               :copyable: true

               migrator.queryconversion.llm.options.provider: AzureOpenAI
               migrator.queryconversion.llm.options.apiKey: {apiKey}
               migrator.queryconversion.llm.options.apiVersion: {api version}
               migrator.queryconversion.llm.options.deployment: {deployment name}
               migrator.queryconversion.llm.options.baseUrl: https://{instance}.openai.azure.com/
               migrator.queryconversion.llm.options.model: {model}

         .. tab:: OpenAI
            :tabid: llm-settings-openai

            .. code-block:: javascript
               :copyable: true

               migrator.queryconversion.llm.options.provider: OpenAI
               migrator.queryconversion.llm.options.apiKey: apiKey
               migrator.queryconversion.llm.options.baseUrl: https://api.openai.com/v1
               migrator.queryconversion.llm.options.model: gpt-4

         .. tab:: Vertex AI
            :tabid: llm-settings-gcp-vertex

            .. code-block:: javascript
               :copyable: true

               migrator.queryconversion.llm.options.provider: GCPVertex
               migrator.queryconversion.llm.options.apiKey: 
               migrator.queryconversion.llm.options.model: gemini-pro

         .. tab:: Amazon Bedrock
            :tabid: llm-settings-aws-bedrock

            .. code-block:: javascript
               :copyable: true

               migrator.queryconversion.llm.options.provider: AWSBedrock
               migrator.queryconversion.llm.options.awsAccessKeyId:
               migrator.queryconversion.llm.options.awsSecretAccessKey:
               migrator.queryconversion.llm.options.regionName: us-east-1
               migrator.queryconversion.llm.options.modelId:
               anthropic.claude-3-sonnet-20240229-v1:0
   
   .. step:: Save and close the file, and restart Relational Migrator.


Next Steps
----------

If you haven't already, :ref:`enable Query Converter <rm-enable-query-converter>`.